.Dd $Mdocdate: January 11 2023 $
.Dt LUAROCKS-BUILD 1
.Os
.Sh NAME
.Nm luarocks-build
.Nd build and install a rock

.Sh SYNOPSIS
.Nm luarocks build
.Bk -words
.Op Fl h
.Op Fl -only-deps
.Op Fl -branch Ar name
.Op Fl -pin
.Op Fl -no-install
.Op Fl -no-doc
.Op Fl -pack-binary-rock
.Op Fl -keep
.Op Fl -force
.Op Fl -force-fast
.Op Fl -verify
.Op Fl -sign
.Op Fl -check-lua-versions
.Op Fl -no-manifest
.Op Fl -deps-mode Ar mode
.Op rock
.Op version
.Ek

.Sh DESCRIPTION
.Nm luarocks build
builds and installs
.Ar rock ,
along with its C code if any.
.Pp
.Ar rock
could be a rockspec file, a source rock file, or the name of a rock to be fetched from a repository.
If a
.Ar version
argument is given,
.Nm luarocks build
will build that version of
.Ar rock .
.Pp
If the sources contain a luarocks.lock file,
.Nm luarocks build
will use it as an authoritative source for exact versions of dependencies.
.Pp
If
.Nm luarocks build
is called without any arguments, it behaves as
.Sy luarocks make .
.Pp
The options are as follows:
.Bl -tag -width keyword
.It Fl h
Show a help message and exit.
.It Fl -only-deps , Fl -deps-only
Install only the dependencies of the rock.
.It Fl -pin
Create a luarocks.lock file listing the exact versions of each dependency found for this rock (recursively), and store it in the rock's directory. Ignores any existing luarocks.lock file in the rock's sources.
.It Fl -no-install
Build the rock without installing it.
.It Fl -no-doc
Install the rock without its documentation.
.It Fl -pack-binary-rock
Do not install
.Ar rock .
Instead, produce a .rock file with the contents of compilation in the current directory.
.It Fl -keep
Do not remove previously installed versions of the rock after building a new one. This behavior can be made permanent by setting keep_other_versions=true in the configuration file.
.It Fl -force
If --keep is not specified, force removal of previously installed versions even if it would break dependencies.
.It Fl -force-fast
Similar to --force, but performs a forced removal without reporting dependency issues.
.It Fl -no-doc
Install the rock without its documentation.
.It Fl -verify
Verify signature of the rockspec or src.rock being built. If the rockspec or src.rock is being downloaded,
.Sy luarocks
will attempt to download the signature as well. Otherwise, the signature file should be already available locally in the same directory. You need the signerâ€™s public key in your local keyring for this option to work properly.
.It Fl -sign
Produce a signature file for the generated .rock file when used with
.Fl -pack-binary-rock .
.It Fl -check-lua-versions
If the rock can't be found, check the repository and report if it is available for another Lua version.
.It Fl -no-manifest
Skip creating/updating the manifest.
.It Fl -deps-mode Ar mode
Specify how to handle dependencies. Four modes are supported:
.Pp
.Bl -bullet
.It
.Sy all :
use all trees from the rocks_trees list for finding dependencies
.It
.Sy one :
use only the current tree (possibly set with --tree)
.It
.Sy order :
use trees based on order (use the current tree and all trees below it on the rocks_trees list)
.It
.Sy none :
ignore dependencies altogether.
.El
.Pp
The default mode may be set with the deps_mode entry in the configuration file. The current default is
.Ar one .
Run
.Sy luarocks
with no arguments to see your
list of rocks trees.
.El

.Sh EXAMPLES
.Pp
Build a specific rockspec, but don't install it:
.Pp
.Dl $ luarocks build --no-install mysupercoolrock-0.1.0-1.rockspec
.Pp
Find a rockspec automatically and build and install it, without its documentation:
.Pp
.Dl $ luarocks build --no-doc
.Pp

.Sh SEE ALSO
.Xr luarocks-make 1
